version: '3.8'
services:
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3307:3306"
    networks:
      - user-management
    volumes:
      - ./docker/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - user-management
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  rbac:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-rbac
    image: microservices-rbac
    environment:
      IN_DOCKER: true
      DATABASE_DSN: mysql://user:password@tcp(mysql:3306)/rbac_service?charset=utf8mb4&parseTime=True&loc=Local
      JWT_SECRET: 5f3d4923ba202dad5036098efa1fe856f2bb9492063eb978571bcbb4fd934edd
      PORT: 8082
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      RABBITMQ_QUEUE: user-events
    ports:
      - 8082:8082
      - 9092:9092
    volumes:
      - ./logs:/logs
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - user-management

  user:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-user
    image: microservices-user
    environment:
      IN_DOCKER: true
      DATABASE_DSN: mysql://user:password@tcp(mysql:3306)/user_service?charset=utf8mb4&parseTime=True&loc=Local
      JWT_SECRET: 5f3d4923ba202dad5036098efa1fe856f2bb9492063eb978571bcbb4fd934edd
      PORT: 8081
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      RABBITMQ_QUEUE: user-events
      RBAC_GRPC_ADDR: rbac:8082
    ports:
      - 8081:8081
      - 9091:9091
    volumes:
      - ./logs:/logs
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - user-management

  api-gateway:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-api-gateway
    image: microservices-api-gateway
    environment:
      PORT: 8080
      USER_HTTP_PORT: http://user:8081
      RBAC_HTTP_PORT: http://rbac:8082
      JWT_SECRET: 5f3d4923ba202dad5036098efa1fe856f2bb9492063eb978571bcbb4fd934edd
    ports:
      - 8080:8080
    networks:
      - user-management
    depends_on:
      - rbac
      - user

networks:
  user-management:
    name: user-management
    driver: bridge