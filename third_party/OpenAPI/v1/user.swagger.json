{
  "swagger": "2.0",
  "info": {
    "title": "User Management API",
    "description": "API for user registration, authentication, and user management.",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/login": {
      "post": {
        "summary": "Login a user",
        "description": "Authenticates a user and issues access and refresh tokens.",
        "operationId": "UserService_Login",
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/refresh": {
      "post": {
        "summary": "Refresh token",
        "description": "Validates a refresh token and issues new access and refresh tokens.",
        "operationId": "UserService_RefreshToken",
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenResponse"
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "schema": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/register": {
      "post": {
        "summary": "Register a user",
        "description": "Creates a new user in user_db.users, stores credentials, and assigns default role via rbac-svc.",
        "operationId": "UserService_Register",
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/v1RegisterResponse"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {}
          },
          "500": {
            "description": "Internal server error",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email address"
        },
        "password": {
          "type": "string",
          "title": "Password"
        }
      }
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "UUID of the user"
        },
        "email": {
          "type": "string",
          "title": "Email address"
        },
        "username": {
          "type": "string",
          "title": "Username"
        },
        "accessToken": {
          "type": "string",
          "title": "JWT access token"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token"
        },
        "success": {
          "type": "boolean",
          "title": "True if login succeeded"
        },
        "error": {
          "type": "string",
          "title": "Error message if failed"
        }
      }
    },
    "v1RefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "title": "Refresh token"
        }
      }
    },
    "v1RefreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "title": "New JWT access token"
        },
        "refreshToken": {
          "type": "string",
          "title": "New refresh token"
        },
        "success": {
          "type": "boolean",
          "title": "True if token refresh succeeded"
        },
        "error": {
          "type": "string",
          "title": "Error message if failed"
        }
      }
    },
    "v1RegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email address"
        },
        "username": {
          "type": "string",
          "title": "Username"
        },
        "password": {
          "type": "string",
          "title": "Password"
        }
      }
    },
    "v1RegisterResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "UUID of the created user"
        },
        "email": {
          "type": "string",
          "title": "Email address"
        },
        "username": {
          "type": "string",
          "title": "Username"
        },
        "accessToken": {
          "type": "string",
          "title": "JWT access token"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token"
        },
        "success": {
          "type": "boolean",
          "title": "True if registration succeeded"
        },
        "error": {
          "type": "string",
          "title": "Error message if failed"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "description": "JWT token using the Bearer scheme. Example: 'Authorization: Bearer {token}'",
      "name": "Authorization",
      "in": "header"
    }
  }
}
