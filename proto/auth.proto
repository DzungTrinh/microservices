syntax = "proto3";
package proto;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/dzungtrinh/microservices/proto/gen";

service AuthService {
  rpc Register(RegisterRequest) returns (AuthTokens) {
    option (google.api.http) = {
      post: "/api/v1/register"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary:     "User register"
      description: "Register new account."
      tags:        "Auth"
    };
  }
  rpc Login(LoginRequest) returns (AuthTokens) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary:     "User login"
      description: "Authenticate user credentials and get access + refresh tokens."
      tags:        "Auth"
    };
  }
  rpc Refresh(RefreshRequest) returns (AccessToken) {
    option (google.api.http) = {
      post: "/api/v1/refresh"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary:     "Refresh token"
      description: "Verify refresh token then get new access token and refresh token."
      tags:        "Auth"
    };
  }
}

message RegisterRequest { string email = 1; string username = 2; string password = 3; }
message LoginRequest    { string email = 1; string password = 2; }
message RefreshRequest  { string refresh_token = 1; }

message AuthTokens  { string access_token = 1; string refresh_token = 2; bool mfa_required = 3; }
message AccessToken { string access_token = 1; }
